services:
  web:
    container_name: sample-web
    build:
      context: .
      args:
        DEPENDENCIES: ""
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: sample-db
    networks:
      - sample-net
    ports:
      - 8000:8000
    command: >
      bash -c "python manage.py makemigrations \
              && python manage.py migrate \
              && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      sample-db:
        condition: service_healthy
    restart: unless-stopped
  
  sample-db:
    container_name: sample-db
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - sample-net
    volumes:
      - sample-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  sample-net:
    driver: bridge

volumes:
  sample-data: